# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/customizing-atom#customizing-key-bindings
# * https://atom.io/docs/latest/advanced/keymaps
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

#Platfrom Darwin
'.platform-darwin':
  'cmd-1': 'tree-view:toggle'

#Atom Workspace atom-text-edit:not[mini]!
'atom-workspace atom-text-editor:not([mini])':
  'alt-k' : 'editor:toggle-line-comments'
  'shift-enter': 'editor:newline-below'
  'cmd-enter': 'editor:newline'
  'alt-cmd-enter': 'editor:newline-above'
  'cmd-e': 'recent-files-fuzzy-finder:toggle-finder'

#Atom Workspace
'atom-workspace':
  'cmd-e': 'recent-files-fuzzy-finder:toggle-finder'

#Vim!
'.vim-mode.insert-mode:not(.mini)':
  'j k': 'vim-mode:activate-command-mode'
